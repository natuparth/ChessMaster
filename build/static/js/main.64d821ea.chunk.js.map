{"version":3,"sources":["grid/useUpdateGrid.js","grid/grid.jsx","App.js","reportWebVitals.js","index.js"],"names":["samplecell","coin","coinColor","isActive","findPossibleMoves","tempcellDetails","r","c","chance","forEach","cell","data","i","m","checkForKingChecked","boardLayout","color","flag","colorToCheck","findKingPosition","x","y","j","_","require","pieces","black","pawn","rook","knight","bishop","queen","king","white","defaultClassArray","Array","from","length","Grid","coinPositions","player1","player2","useState","sec","min","timerState","setTimer","coinSelected","setcoinSelected","cellSelected","setcellSelected","item","setChance","checkFlag","setCheckFlag","checkmateFlag","setCheckmateFlag","whiteDead","setWhiteDead","blackDead","setBlackDead","classArray","setClassArray","cellDetails","setCellDetails","useEffect","alert","setCellDetailsHandler","timer","setInterval","prev","clearInterval","initialColor","row","CreateRow","push","setCoinSelectedHandler","setCellSelectedHandler","cellSelector","e","temp","Object","assign","elem","map","Number","temporary","killedCoin","makeAMove","resultLayout","movePlayed","a","temporary1","tempArray","k","l","n","checkForKingCheckmate","setChanceHandler","firstCellColor","rowNum","classN","className","onClick","uniqueId","useNameHook","name","setName","onChange","target","value","App","coins","gameStarted","setGameStarted","name1","name2","type","placeholder","aria-hidden","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64d821ea.chunk.js","sourcesContent":["//import {useEffect, useState} from 'react';\nconst samplecell = {\n    coin: '',\n    coinColor: '',\n    isActive: false\n  }\n\n\nexport function findPossibleMoves(tempcellDetails,r,c, chance){\n  \n  \n           //   = cellDetails.map((elem)=>elem.slice(0));\n\n        tempcellDetails.forEach((cell) => {\n          cell.forEach((data) => {\n            data.isActive = false\n          });\n        })\n        tempcellDetails[r][c].isActive = true;\n        //coin condition\n        var i=0;\n        switch (tempcellDetails[r][c].coin) {\n          case 'rook': {\n            for (let i = 1; i < 8; i++) {\n              if (c + i < 8) {\n                if (tempcellDetails[r][c + i].coin === '') \n                  tempcellDetails[r][c + i].isActive = true;\n                \n                else if (tempcellDetails[r][c + i].coin !== '' && tempcellDetails[r][c + i].coinColor !== tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r][c + i].isActive = true;\n                  break;\n                }\n                else \n                  break;\n                \n              }\n              else {\n                break;\n              }\n            }\n            for (let i = 1; i < 8; i++) {\n              if (c - i >= 0) {\n                if (tempcellDetails[r][c - i].coin=== '') {\n                  tempcellDetails[r][c - i].isActive = true;\n                }\n                else if (tempcellDetails[r][c - i].coin !=='' && tempcellDetails[r][c - i].coinColor !==tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r][c - i].isActive = true;\n                  break;\n                }\n                else {\n                  break;\n                }\n              }\n              else {\n                break;\n              }\n            }\n            for (let i = 1; i < 8; i++) {\n              if (r + i < 8) {\n                if (tempcellDetails[r + i][c].coin=== '') {\n                  tempcellDetails[r + i][c].isActive = true;\n                }\n                else if (tempcellDetails[r + i][c].coin !=='' && tempcellDetails[r + i][c].coinColor !==tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r + i][c].isActive = true;\n                  break;\n                }\n                else {\n                  break;\n                }\n              }\n              else {\n                break;\n              }\n            }\n            for (let i = 1; i < 8; i++) {\n              if (r - i >= 0) {\n                if (tempcellDetails[r - i][c].coin=== '') {\n                  tempcellDetails[r - i][c].isActive = true;\n                }\n                else if (tempcellDetails[r - i][c].coin !=='' && tempcellDetails[r - i][c].coinColor !==tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r - i][c].isActive = true;\n                  break;\n                }\n                else {\n                  break;\n                }\n              }\n              else {\n                break;\n              }\n            }\n          \n            break;\n          }\n          case 'knight': \n            if (r + 2 < 8 && c + 1 < 8 && tempcellDetails[r + 2][c + 1].coinColor !==tempcellDetails[r][c].coinColor) \n              tempcellDetails[r + 2][c + 1].isActive = true;\n            \n            if (r + 2 < 8 && c - 1 >= 0 && tempcellDetails[r + 2][c - 1].coinColor !==tempcellDetails[r][c].coinColor) \n              tempcellDetails[r + 2][c - 1].isActive = true;\n            \n            if (r - 2 >= 0 && c + 1 < 8 && tempcellDetails[r - 2][c + 1].coinColor !==tempcellDetails[r][c].coinColor) \n              tempcellDetails[r - 2][c + 1].isActive = true;\n            \n            if (r - 2 >= 0 && c - 1 >= 0 && tempcellDetails[r - 2][c - 1].coinColor !==tempcellDetails[r][c].coinColor) \n              tempcellDetails[r - 2][c - 1].isActive = true;\n            \n            if (r + 1 < 8 && c + 2 < 8 && tempcellDetails[r + 1][c + 2].coinColor !==tempcellDetails[r][c].coinColor) \n              tempcellDetails[r + 1][c + 2].isActive = true;\n            \n            if (r - 1 >= 0 && c + 2 < 8 && tempcellDetails[r - 1][c + 2].coinColor !==tempcellDetails[r][c].coinColor) \n              tempcellDetails[r - 1][c + 2].isActive = true;\n            \n            if (r + 1 < 8 && c - 2 >= 0 && tempcellDetails[r + 1][c - 2].coinColor !==tempcellDetails[r][c].coinColor) \n              tempcellDetails[r + 1][c - 2].isActive = true;\n            \n            if (r - 1 >= 0 && c - 2 >= 0 && tempcellDetails[r - 1][c - 2].coinColor !==tempcellDetails[r][c].coinColor) \n              tempcellDetails[r - 1][c - 2].isActive = true;\n            \n          \n            break;\n          case 'bishop': {\n            for (let i = 1; i < 8; i++) {\n              if (c + i < 8 && r + i < 8) {\n                if (tempcellDetails[r + i][c + i].coin=== '') {\n                  tempcellDetails[r + i][c + i].isActive = true;\n                }\n                else if (tempcellDetails[r + i][c + i].coin !=='' && tempcellDetails[r + i][c + i].coinColor !==tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r + i][c + i].isActive = true;\n                  break;\n                }\n                else {\n                  break;\n                }\n              }\n              else {\n                break;\n              }\n            }\n            for (let m = 1; m < 8; m++) {\n              if (c - m >= 0 && r + m < 8) {\n                if (tempcellDetails[r + m][c - m].coin=== '') {\n                  tempcellDetails[r + m][c - m].isActive = true;\n                }\n                else if (tempcellDetails[r + m][c - m].coin !=='' && tempcellDetails[r + m][c - m].coinColor !==tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r + m][c - m].isActive = true;\n                  break;\n                }\n                else {\n                  break;\n                }\n              }\n              else {\n                break;\n              }\n            }\n            for (let i = 1; i < 8; i++) {\n              if (c + i < 8 && r - i >= 0) {\n                if (tempcellDetails[r - i][c + i].coin=== '') {\n                  tempcellDetails[r - i][c + i].isActive = true;\n                }\n                else if (tempcellDetails[r - i][c + i].coin !=='' && tempcellDetails[r - i][c + i].coinColor !==tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r - i][c + i].isActive = true;\n                  break;\n                }\n                else {\n                  break;\n                }\n              }\n              else {\n                break;\n              }\n            }\n            for (let i = 1; i < 8; i++) {\n              if (c - i >= 0 && r - i >= 0) {\n                if (tempcellDetails[r - i][c - i].coin=== '') {\n                  tempcellDetails[r - i][c - i].isActive = true;\n                }\n                else if (tempcellDetails[r - i][c - i].coin !=='' && tempcellDetails[r - i][c - i].coinColor !==tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r - i][c - i].isActive = true;\n                  break;\n                }\n                else {\n                  break;\n                }\n              }\n              else {\n                break;\n              }\n            }\n          \n            break;\n          }\n          case 'queen': \n            for (let i = 1; i < 8; i++) {\n              if (c + i < 8) {\n                if (tempcellDetails[r][c + i].coin=== '') {\n                  tempcellDetails[r][c + i].isActive = true;\n                }\n                else if (tempcellDetails[r][c + i].coin !=='' && tempcellDetails[r][c + i].coinColor !==tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r][c + i].isActive = true;\n                  break;\n                }\n                else {\n                  break;\n                }\n              }\n              else {\n                break;\n              }\n            }\n            for (let i = 1; i < 8; i++) {\n              if (c - i >= 0) {\n                if (tempcellDetails[r][c - i].coin=== '') {\n                  tempcellDetails[r][c - i].isActive = true;\n                }\n                else if (tempcellDetails[r][c - i].coin !=='' && tempcellDetails[r][c - i].coinColor !==tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r][c - i].isActive = true;\n                  break;\n                }\n                else {\n                  break;\n                }\n              }\n              else {\n                break;\n              }\n            }\n            for (let i = 1; i < 8; i++) {\n              if (r + i < 8) {\n                if (tempcellDetails[r + i][c].coin=== '') {\n                  tempcellDetails[r + i][c].isActive = true;\n                }\n                else if (tempcellDetails[r + i][c].coin !=='' && tempcellDetails[r + i][c].coinColor !==tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r + i][c].isActive = true;\n                  break;\n                }\n                else {\n                  break;\n                }\n              }\n              else {\n                break;\n              }\n            }\n            for (let i = 1; i < 8; i++) {\n              if (r - i >= 0) {\n                if (tempcellDetails[r - i][c].coin=== '') {\n                  tempcellDetails[r - i][c].isActive = true;\n                }\n                else if (tempcellDetails[r - i][c].coin !=='' && tempcellDetails[r - i][c].coinColor !==tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r - i][c].isActive = true;\n                  break;\n                }\n                else {\n                  break;\n                }\n              }\n              else {\n                break;\n              }\n            }\n            for (let i = 1; i < 8; i++) {\n              if (c + i < 8 && r + i < 8) {\n                if (tempcellDetails[r + i][c + i].coin=== '') {\n                  tempcellDetails[r + i][c + i].isActive = true;\n                }\n                else if (tempcellDetails[r + i][c + i].coin !=='' && tempcellDetails[r + i][c + i].coinColor !==tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r + i][c + i].isActive = true;\n                  break;\n                }\n                else {\n                  break;\n                }\n              }\n              else {\n                break;\n              }\n            }\n            for (let i = 1; i < 8; i++) {\n              if (c - i >= 0 && r + i < 8) {\n                if (tempcellDetails[r + i][c - i].coin=== '') {\n                  tempcellDetails[r + i][c - i].isActive = true;\n                }\n                else if (tempcellDetails[r + i][c - i].coin !=='' && tempcellDetails[r + i][c - i].coinColor !==tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r + i][c - i].isActive = true;\n                  break;\n                }\n                else {\n                  break;\n                }\n              }\n              else {\n                break;\n              }\n            }\n            for (let i = 1; i < 8; i++) {\n              if (c + i < 8 && r - i >= 0) {\n                if (tempcellDetails[r - i][c + i].coin=== '') {\n                  tempcellDetails[r - i][c + i].isActive = true;\n                }\n                else if (tempcellDetails[r - i][c + i].coin !=='' && tempcellDetails[r - i][c + i].coinColor !==tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r - i][c + i].isActive = true;\n                  break;\n                }\n                else {\n                  break;\n                }\n              }\n              else {\n                break;\n              }\n            }\n            for (let i = 1; i < 8; i++) {\n              if (c - i >= 0 && r - i >= 0) {\n                if (tempcellDetails[r - i][c - i].coin=== '') {\n                  tempcellDetails[r - i][c - i].isActive = true;\n                }\n                else if (tempcellDetails[r - i][c - i].coin !=='' && tempcellDetails[r - i][c - i].coinColor !==tempcellDetails[r][c].coinColor) {\n                  tempcellDetails[r - i][c - i].isActive = true;\n                  break;\n                }\n                else {\n                  break;\n                }\n              }\n              else {\n                break;\n              }\n            }\n          \n            break;\n          case 'king': \n            const i = 1;\n            if (c + i < 8 && tempcellDetails[r][c + i].coinColor !==tempcellDetails[r][c].coinColor) {\n              tempcellDetails[r][c + i].isActive = true;\n            }\n            if (c - i >= 0 && tempcellDetails[r][c - i].coinColor !==tempcellDetails[r][c].coinColor) {\n              tempcellDetails[r][c - i].isActive = true;\n            }\n            if (r + i < 8 && tempcellDetails[r + i][c].coinColor !==tempcellDetails[r][c].coinColor) {\n              tempcellDetails[r + i][c].isActive = true;\n            }\n            if (r - i >= 0 && tempcellDetails[r - i][c].coinColor !==tempcellDetails[r][c].coinColor) {\n              tempcellDetails[r - i][c].isActive = true;\n            }\n            if (c + i < 8 && r + i < 8 && tempcellDetails[r + i][c + i].coinColor !==tempcellDetails[r][c].coinColor) {\n              tempcellDetails[r + i][c + i].isActive = true;\n            }\n            if (c - i >= 0 && r + i < 8 && tempcellDetails[r + i][c - i].coinColor !==tempcellDetails[r][c].coinColor) {\n              tempcellDetails[r + i][c - i].isActive = true;\n            }\n            if (c + i < 8 && r - i >= 0 && tempcellDetails[r - i][c + i].coinColor !==tempcellDetails[r][c].coinColor) {\n              tempcellDetails[r - i][c + i].isActive = true;\n            }\n            if (c - i >= 0 && r - i >= 0 && tempcellDetails[r - i][c - i].coinColor !==tempcellDetails[r][c].coinColor) {\n              tempcellDetails[r - i][c - i].isActive = true;\n            }\n          \n            break;\n          case 'pawn': \n            if (tempcellDetails[r][c].coinColor=== 'white') {\n              if (r=== 6 && tempcellDetails[r - 2][c].coinColor=== '')\n                tempcellDetails[r - 2][c].isActive = true\n              if (r - 1 >= 0 && tempcellDetails[r - 1][c].coinColor=== '')\n                tempcellDetails[r - 1][c].isActive = true\n              if (r - 1 >= 0 && c + 1 < 8 && tempcellDetails[r - 1][c + 1].coinColor=== 'black')\n                tempcellDetails[r - 1][c + 1].isActive = true\n              if (r - 1 >= 0 && c - 1 >= 0 && tempcellDetails[r - 1][c - 1].coinColor=== 'black')\n                tempcellDetails[r - 1][c - 1].isActive = true\n            }\n            else {\n              if (r=== 1 && tempcellDetails[r + 2][c].coinColor=== '')\n                tempcellDetails[r + 2][c].isActive = true\n              if (r + 1 < 8 && tempcellDetails[r + 1][c].coinColor=== '')\n                tempcellDetails[r + 1][c].isActive = true\n              if (r + 1 < 8 && c + 1 < 8 && tempcellDetails[r + 1][c + 1].coinColor=== 'white')\n                tempcellDetails[r + 1][c + 1].isActive = true\n              if (r + 1 < 8 && c - 1 >= 0 && tempcellDetails[r + 1][c - 1].coinColor=== 'white')\n                tempcellDetails[r + 1][c - 1].isActive = true\n            }\n          \n            break;\n          default:\n        }\n\n    return tempcellDetails;\n         \n         \n}\n\n  export const makeAMove = (tempcellDetails, r, c, cellSelected, coinSelected) => {\n    \n        let temporary = [];\n        let killedCoin=samplecell\n        for(let i=0;i<8;i++)\n       {\n          temporary[i] = [];\n           for(let j=0;j<8;j++){\n             temporary[i][j] = Object.assign({}, tempcellDetails[i][j]);\n            }\n       }\n        temporary[Number(cellSelected[0])][Number(cellSelected[1])] = samplecell\n        temporary[r][c] = coinSelected;\n        const checkFlag = checkForKingChecked(temporary, coinSelected.coinColor)\n        if(checkFlag === true)\n          {\n            alert('how dare you macha! your king is under threat');\n          }\n        else{\n             tempcellDetails[Number(cellSelected[0])][Number(cellSelected[1])] = samplecell\n             killedCoin=tempcellDetails[r][c]\n             tempcellDetails[r][c] = coinSelected\n        }\n        \n\n        tempcellDetails.forEach((cell) => {\n          cell.forEach((data) => {\n            data.isActive = false\n          });\n        })\n      return [tempcellDetails,killedCoin, !checkFlag];\n  }\n\n\n\n  export const checkForKingChecked = (boardLayout, color) => {\n     let flag = false;\n     let colorToCheck = color === 'white' ? 'black' : 'white';\n    //  let colorToCheck = color\n     var [x,y] = findKingPosition(boardLayout, color)\n     for(let i=0;i<8;i++){\n       for(let j=0;j<8;j++){\n         if(boardLayout[i][j].coinColor === colorToCheck)\n          {\n             let tempArray = findPossibleMoves([...boardLayout], i, j);\n             if(tempArray[x][y].isActive === true)\n               {\n                 flag = true;\n                 break;\n               } \n          }\n       }\n     }\n      return flag;\n  }\n\n  const findKingPosition = (boardLayout, color) => {\n    var x, y;\n    for(let i=0;i<8;i++)\n      for(let j=0;j<8;j++)\n         if(boardLayout[i][j].coin === \"king\" && boardLayout[i][j].coinColor === color)\n             [x, y] = [i, j];     \n      \n    return [x,y];\n\n  }\n\n  export const checkForKingCheckmate=(boardLayout,color) => {\n      \n    let colorToCheck = color === 'white' ? 'black' : 'white';\n    for(let i=0;i<8;i++){\n        for(let j=0;j<8;j++){\n          if(boardLayout[i][j].coinColor === colorToCheck)\n           {\n              let tempArray = findPossibleMoves([...boardLayout], i, j);\n              for(let k=0;k<8;k++){\n                for(let l=0;l<8;l++){\n                    if((k!=i || l!=j) && tempArray[k][l].isActive==true && tempArray[k][l].coin!='king'){\n                        let temporary = [];\n                          for(let m=0;m<8;m++)\n                             {\n                               temporary[m] = [];\n                               for(let n=0;n<8;n++){\n                                   temporary[m][n] = Object.assign({}, tempArray[m][n]);\n                                 }\n                              }\n                              temporary[k][l]=temporary[i][j]\n                              temporary[i][j]=samplecell;\n                        const checkFlag = checkForKingChecked(temporary, colorToCheck)\n                        if(checkFlag==false){\n                            return false;\n                        }\n                    }\n                }\n            }\n           }\n        }\n      }\n      return true;\n  }","import './grid.css'\nimport React, {  Fragment, useEffect, useState } from 'react';\nimport { findPossibleMoves, makeAMove ,checkForKingChecked,checkForKingCheckmate } from './useUpdateGrid';\nconst _ = require('lodash')\nconst pieces = {\n    black: {\n        pawn: '\\u265F',\n        rook: '\\u265C',\n        knight: '\\u265E',\n        bishop: '\\u265D',\n        queen: '\\u265B',\n        king: '\\u265A'\n    },\n\n    white: {\n        pawn: '\\u2659',\n        rook: '\\u2656',\n        knight: '\\u2658',\n        bishop: '\\u2657',\n        queen: '\\u2655',\n        king: '\\u2654'\n    }\n}\nconst samplecell = {\n    coin: '',\n    coinColor: '',\n    isActive: false\n}\n\nconst defaultClassArray = Array.from({ length: 64 }, () => '');\n\nfunction Grid({ coinPositions, player1, player2 }){\n    const [timerState, setTimer] = useState({sec: 0, min: 0})\n    const [coinSelected, setcoinSelected] = useState(samplecell);\n    const [cellSelected, setcellSelected] = useState([]);\n    let item = []\n    const [chance, setChance] = useState('white')\n    const [checkFlag, setCheckFlag] = useState('false')\n    const [checkmateFlag, setCheckmateFlag] = useState('false')\n    const [whiteDead, setWhiteDead] = useState([]);\n    const [blackDead, setBlackDead] = useState([]);\n    const [classArray, setClassArray] = useState(defaultClassArray);\n\n    //populating initial layout with the cell values\n\n    const [cellDetails, setCellDetails] = useState(coinPositions);\n    useEffect(()=> {\n        if(checkFlag==true){\n            if(checkmateFlag==true){\n                alert('haha ! you have no more moves, i won')\n                setCellDetailsHandler(coinPositions)\n                setCheckmateFlag(false)\n            }\n            else\n            alert('haha macha! your king is under threat');\n            setCheckFlag(false)\n          }\n      let timer = setInterval(()=>{\n          setTimer((prev) => {\n            if(prev.sec >= 60)\n              return { sec:0, min: prev.min +1}\n            else  \n              return { sec:prev.sec+1, min: prev.min}\n          })\n      },1000)\n      return () => clearInterval(timer)\n    })\n    // useEffect(() => {\n    // if(classArray[0]=='checked'){\n    //     alert('haha macha! your king is under threat');\n    //   }\n    // },chance);\nlet initialColor = \"black\"\n    for (let i = 0; i < 8; i++) {\n        let row = CreateRow(initialColor, i, cellDetails)\n        initialColor = initialColor === \"black\" ? \"white\" : \"black\";\n        item.push(...row);\n    }\n\n    const setCellDetailsHandler = (cellDetails) => {\n        setCellDetails(cellDetails);\n      }\n    const setCoinSelectedHandler = (coin) => setcoinSelected(coin);\n    const setCellSelectedHandler = (cell) => setcellSelected(cell);\n    const setChanceHandler = (chance) => setChance(chance);\n    const setClassArrayHandler = (classArray1) => { \n        setClassArray(classArray1)\n    };\n    const setWhiteDeadHandler = (wDead) => setWhiteDead(wDead);\n    const setBlackDeadHandler = (bDead) => setBlackDead(bDead);\n  \n  function cellSelector(e,r,c) {\n    var tempcellDetails =[];\n    var temp=[]\n    for(let i=0;i<8;i++)\n    {     tempcellDetails[i] = [];\n         for(let j=0;j<8;j++){\n             tempcellDetails[i][j] = Object.assign({}, cellDetails[i][j]);\n             temp[i*8+j]=''\n             }\n    }\n    if(!cellDetails[r][c].isActive){\n        if(cellDetails[r][c].coin === '')\n          return;\n     \n      if(cellDetails[r][c].coinColor==chance){\n        setCoinSelectedHandler(cellDetails[r][c])\n        setCellSelectedHandler(a=>[r]);\n        setCellSelectedHandler(a=>[...a,c]);\n        setCellDetailsHandler(findPossibleMoves([...tempcellDetails],r,c))\n      }\n  }\n  else{\n      \n      if(cellDetails[r][c].coinColor === coinSelected.coinColor){\n        tempcellDetails.forEach(elem => elem.forEach(e => e.isActive = false))\n        setCellDetailsHandler(tempcellDetails.map(elem => elem.map(e => { return{ ...e, isActive:false}})))\n      }\n   else if(tempcellDetails[r][c].coinColor!=tempcellDetails[Number(cellSelected[0])][Number(cellSelected[1])].coinColor){\n        //setChanceHandler(chance=='white'?'black':'white')\n        setCoinSelectedHandler(samplecell)\n       let [resultLayout,killedCoin, movePlayed] = makeAMove([...tempcellDetails],r,c,cellSelected,coinSelected)\n       setCellDetailsHandler(resultLayout);\n       if(killedCoin.coinColor=='white'){\n       setWhiteDeadHandler(a=>[...a,killedCoin])\n       }\n       else if(killedCoin.coinColor=='black'){\n       setBlackDeadHandler(a=>[...a,killedCoin])\n       }\n       let temporary = [];\n        for(let i=0;i<8;i++)\n       {\n          temporary[i] = [];\n           for(let j=0;j<8;j++){\n             temporary[i][j] = Object.assign({}, resultLayout[i][j]);\n            }\n       }\n       let temporary1 = [];\n        for(let i=0;i<8;i++)\n       {\n          temporary1[i] = [];\n           for(let j=0;j<8;j++){\n             temporary1[i][j] = Object.assign({}, resultLayout[i][j]);\n            }\n       }\n       if(movePlayed){\n        const checkFlag = checkForKingChecked(temporary, chance==='white'?'black':'white')\n        // const checkmateFlag = checkForKingCheckmate(temporary1,chance)\n        if(checkFlag === true)\n          {\n            setCheckFlag(true)\n            const checkmateFlag1 = checkForKingCheckmate(temporary1,chance)\n            if(checkmateFlag1 === true)\n          {\n            setCheckmateFlag(true)\n          }\n          }\n          \n          \n         setChanceHandler(chance=='white'?'black':'white');\n            }\n    }\n      //alert(tempcellDetails[r][c].coinColor+tempcellDetails[Number(cellSelected[0])][Number(cellSelected[1])].coinColor)\n}\nfor(let i=0;i<8;i++){\nfor(let j=0;j<8;j++){\n  if (tempcellDetails[i][j].isActive) {\n      if (tempcellDetails[i][j].coinColor === \"\")\n          temp[i * 8 + j] = \"elementSelected \"\n      else\n          temp[i * 8 + j] = \"coinToPlay\"\n  }\n}\n}\n\nsetClassArrayHandler(temp);\n}\n\nfunction CreateRow(firstCellColor, rowNum, cellDetails){\n  let color=firstCellColor;\n  let row = [];\n  for (let j = 0; j < 8; j++) {\n            let classN = \"cell \" + (color === \"black\" ? \"white\" : \"black\");\n            row.push(<div key={_.uniqueId()} className={classN} onClick={(e) => cellSelector(e, rowNum, j)}> <div className={classArray[rowNum * 8 + j]} ></div><p>\n                {\n                    pieces[cellDetails[rowNum][j].coinColor] ?\n                        pieces[cellDetails[rowNum][j].coinColor][cellDetails[rowNum][j].coin] : ''\n\n                }\n\n            </p></div>)\n            color = color === \"black\" ? \"white\" : \"black\";\n        }\n        return row; \n}\n\n      \n    return(\n      <Fragment>\n     \n      <div className=\"player\">\n       <div className=\"nameHeader\">{player1}</div>\n       <div className=\"coinsDead\">\n        {\n          blackDead.map((item)=>(\n           <div className=\"dead\">{pieces['black'][item.coin]}</div>\n          ))\n        }\n\n      </div>\n      </div>  \n      <div className=\"wrapper\">\n      <div className=\"timer\">  \n      {timerState.min}:{timerState.sec}\n      </div> \n      <div className=\"boardContainer\"> \n      \n      {item}\n      </div>\n      </div>\n      <div className=\"player\">\n       <div className=\"nameHeader\">{player2}</div>\n       <div className=\"coinsDead\">\n       {\n          whiteDead.map((item)=>(\n           <div className=\"dead\">{pieces.white[item.coin]}</div>\n          ))\n        }\n      </div>\n      </div>  \n      </Fragment>\n\n    )\n}\n\nexport default Grid;\n","import './App.css';\nimport './grid/grid'\nimport Grid from './grid/grid';\nimport { useState } from 'react'\n\nconst useNameHook = () => {\n  const [name, setName] = useState('');\n\n  const handleChange = (e) => {\n    setName(e.target.value)\n  }\n   return {\n     name: name,\n     onChange: handleChange\n   }\n}\n\nfunction App() {\n  const coins = ['rook', 'knight', 'bishop', 'queen', 'king', 'bishop', 'knight', 'rook']\n  const coinPositions = [];\n  const [gameStarted, setGameStarted] = useState(false);\n  const name1 = useNameHook();\n  const name2 = useNameHook();\n  for (let i = 0; i < 8; i++) {\n    coinPositions[i] = [];\n    for (let j = 0; j < 8; j++) {\n      if (i=== 0) {\n        coinPositions[i][j] = {\n          coin: coins[j],\n          coinColor: 'black',\n          isActive: false\n        };\n      }\n      else if (i=== 1) {\n        coinPositions[i][j] = {\n          coin: 'pawn',\n          coinColor: 'black',\n          isActive: false\n        };\n      }\n      else if (i=== 6) {\n        coinPositions[i][j] = {\n          coin: 'pawn',\n          coinColor: 'white',\n          isActive: false\n        };\n      }\n      else if (i=== 7) {\n        coinPositions[i][j] = {\n          coin: coins[j],\n          coinColor: 'white',\n          isActive: false\n        };\n      }\n      else {\n        coinPositions[i][j] = {\n          coin: '',\n          coinColor: '',\n          isActive: false\n        };\n      }\n    }\n  }\n  return (\n    <div className=\"container\">\n       {/* <Grid1></Grid1>  */}\n       {\n       !gameStarted ?\n       <div className=\"header\">\n         <h1> Welcome to ChessMaster</h1>\n         <div className=\"my-form\">\n           <input type=\"text\" placeholder=\"Player 1\" {...name1}/>\n           <input type=\"text\" placeholder=\"Player 2\" {...name2}/>\n         </div>\n          <button className=\"learn-more\" onClick={()=>{setGameStarted(true)}}>\n           <span className=\"circle\" aria-hidden=\"true\">\n           <span className=\"icon arrow\"></span>\n           </span>\n           <span className=\"button-text\">Play</span>\n         </button>\n       </div> : ''\n       }{\n         gameStarted ?\n       <Grid coinPositions={coinPositions} player1={name1.name} player2={name2.name}></Grid>\n       : ' '}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}